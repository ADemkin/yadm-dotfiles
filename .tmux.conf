# To get hex codes for iTerm2 use xxd -psd
# mouse e mode (tmux 2.1 and above)
set -g mouse off
set -g default-terminal "screen-256color"
set -g base-index 1

# Enamble Vi mode
set -g mode-keys vi

# Set history limit
set -g history-limit 131072

# Move over panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Rename windows
set-window-option -g automatic-rename on

###############################################################################
### Date/Time values that can be displayed in the status line
###############################################################################

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# D - %52 ?
# H - AntonDemkins-MacBook-Pro.local
# For a more complete list view: https://linux.die.net/man/3/strftime


# Theme
accent="green"
grey1="#[fg=colour235,bg=colour252]"
grey2="#[fg=colour246,bg=colour238]"
grey3="#[fg=colour245,bg=colour235]"
grey4="#[fg=colour240,bg=colour234]"
grey5="#[fg=colour239,bg=colour233]"
# Status
set -g status-style "bg=colour16"
set -g status-interval 1
set -g status-justify centre
set -g status-left-length 200
set -g  status-left "#{grey1} #S "
set -ag status-left "${grey2} #(whoami) "
set -ag status-left "${grey3} #(. ~/layout.sh) "
set -ag status-left "${grey4} #(. ~/brandwidth.sh) "
set -ag status-left "${grey5} #{pomodoro_status} "
set -g status-right-length 200
set -g status-right "${grey4} #(. ~/ping.sh) "
set -ag status-right "${grey3} #(. ~/battery.sh) "
set -ag status-right "${grey2} %d.%m.%y %a "
set -ag status-right "${grey1} %R "
# window
set -g window-status-style "fg=colour249,bg=colour235"
set -g window-status-last-style "fg=${accent},bg=colour237"
set -g window-status-current-style "fg=colour16,bg=${accent}"
set -g window-status-bell-style "fg=black,bg=white"
set -g window-status-format " #I #W "
set -g window-status-current-format " #I #W "
set -g window-status-separator " "
# Panes
set -g pane-border-style "bg=default,fg=brightblack"
set -g pane-active-border-style "bg=default,fg=${accent}"
set -g display-panes-colour "black"
set -g display-panes-active-colour "brightblack"


# Copypaste mode
set-window-option -g mode-keys vi

# Reload the config by C-b r
bind r source-file ~/.tmux.conf \; display "source: ~/.tmux.conf"

# Open terminal history in vim
bind-key C-e run-shell "~/edit-tmux-output.sh"

# Cycle through last windows by C-b C-a
bind-key C-a last-window

# C-Tab to cycle through panes
bind -r Tab select-pane -t :.+

# Bind keys to change selected pane width
bind & resize-pane -x 70
bind * resize-pane -x 80
bind ( resize-pane -x 90
bind ) resize-pane -x 120

# Easy resize pane with C-b HJKL
bind H resize-pane -L 3
bind J resize-pane -D 3
bind K resize-pane -U 3
bind L resize-pane -R 3

# Neovim reccomendations
set -sg escape-time 10
set -g focus-events on
set -sa terminal-overrides ',XXX:RGB'
set -sa terminal-overrides ", xterm*: Tc"

# Open new pane in current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Run gping.sh when C-b g is pressed
bind-key g run-shell "~/gping.sh"

# VimTmuxNavigator snippet
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# this snippet disallow to move out of zoomed pane
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
# bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
# bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
# bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

# bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
# bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
# bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
# bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# TmuxPluginManager
# clone it first:
# % git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# then use hotkeys:
# prefix I - install
# prefix U - update
set -g @plugin 'tmux-plugins/tpm'

# VimTmuxNavigator
set -g @plugin 'christoomey/vim-tmux-navigator'

# PomodoroPlus: c-b c-P to start pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @pomodoro_granularity 'on'
set -g @pomodoro_notifications 'on'
set -g @pomodoro_interval_display " %s/%s"
set -g @pomodoro_on " üçÖ "
set -g @pomodoro_complete " üöæ "
set -g @pomodoro_pause " üïõ "
set -g @pomodoro_prompt_break " üöæ? "
set -g @pomodoro_prompt_pomodoro " üçÖ? "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
